name: "Pull request"

on:
  pull_request:
    paths-ignore:
      - '**.md'
      - 'docs/**'

env:
  REGISTRY: ghcr.io
  JAVA_VERSION: 17
  COMMIT_SHA: ${{ github.event.pull_request.head.sha }}

jobs:
  Dependency-analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '${{ env.JAVA_VERSION }}'
          distribution: 'adopt'
          cache: 'maven'

      - name: Dependency rules report # possible severity values: <'fail'|'warn'|'ignore'>
        run: mvn --quiet --batch-mode -Pdependency-check validate

      - name: Dependency analysis report
        run: cat build/reports/dependency-analysis/build-health-report.txt

  Unit-test:
    permissions:
      checks: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '${{ env.JAVA_VERSION }}'
          distribution: 'adopt'
          cache: 'maven'

      - name: Run unit tests
        run: pwd && ls -la && ls -l openapi

      - name: Publish unit test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: "./target/failsafe-reports/*.*"
          check_name: "Unit Test Results"

  Integration-test:
    permissions:
      checks: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '${{ env.JAVA_VERSION }}'
          distribution: 'adopt'
          cache: 'maven'

      - name: Run integration tests
        run: mvn --quiet --batch-mode -PiT clean verify

      - name: Publish integration test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: "./target/failsafe-reports/*.xml"
          check_name: "Integration Test Results"

  Publish-docker-image:
    needs: ["Unit-test", "Integration-test"]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '${{ env.JAVA_VERSION }}'
          distribution: 'adopt'
          cache: 'maven'

      - name: Build docker image
        run: mvn --quiet --batch-mode compile com.google.cloud.tools:jib-maven-plugin:3.3.1:build -Dimage=${{ env.REGISTRY }}/${{ github.repository }}:${{ env.COMMIT_SHA }}

      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push docker image
        run: docker push ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.COMMIT_SHA }}

  Sonar-Cloud-analyze:
    needs: ["Unit-test", "Integration-test"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - uses: actions/setup-java@v3
        with:
          java-version: '${{ env.JAVA_VERSION }}'
          distribution: 'adopt'
          cache: 'maven'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn --quiet --batch-mode -DskipTests=true -DskipTests=true clean package sonar:sonar
